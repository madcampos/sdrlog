class t extends EventTarget{static#t={a:!1,b:!1,x:!1,y:!1,leftBumper:!1,rightBumper:!1,leftTrigger:!1,rightTrigger:!1,select:!1,start:!1,leftStick:!1,rightStick:!1,up:!1,down:!1,left:!1,right:!1,logo:!1,share:!1};static#e=0;static init(e){window.addEventListener("gamepadconnected",()=>{console.info("[ðŸŽ®] Gamepad connected."),t.#e=performance.now(),t.#s(),e?.()})}static#s(){t.#n(),window.requestAnimationFrame(()=>{t.#s()})}static#i(e,s,i){window.dispatchEvent(new CustomEvent("gamepadstickmove",{bubbles:!0,composed:!0,cancelable:!0,detail:{directionX:s>.2?"right":s<-.2?"left":void 0,directionY:i>.2?"down":i<-.2?"up":void 0,deltaX:s,deltaY:i,stick:e}}))}static#o(e,s){const i=t.#t[e];s&&(t.#t[e]=!0,window.dispatchEvent(new CustomEvent("gamepadbuttondown",{bubbles:!0,composed:!0,cancelable:!0,detail:{button:e}}))),i&&!s&&(t.#t[e]=!1,window.dispatchEvent(new CustomEvent("gamepadbuttonup",{bubbles:!0,composed:!0,cancelable:!0,detail:{button:e}})),window.dispatchEvent(new CustomEvent("gamepadbuttonpress",{bubbles:!0,composed:!0,cancelable:!0,detail:{button:e}})))}static#n(){const[s]=navigator.getGamepads(),i=performance.now();if(s&&i-t.#e>100){t.#e=i;const[o,n,c,a]=s.axes;t.#i("left",o,n),t.#i("right",c,a),Object.keys(t.#t).forEach((r,E)=>{const l=s.buttons[E]?.pressed;t.#o(r,l)})}}static vibrate(e=100,s=.4,i=0){const[o]=navigator.getGamepads();o?.vibrationActuator?.playEffect("dual-rumble",{startDelay:0,duration:e,weakMagnitude:s,strongMagnitude:i})}static shortVibration(){t.vibrate()}static longVibration(){t.vibrate(300,.8,.2)}}export{t as GamepadHandler};
